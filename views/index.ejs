<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Abbhyasa</title>
    <link rel="stylesheet" href="./style.css">
    <link rel="shortcut icon" href="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSILsqh4hPGyd3zsf02kdD7M25FD1bIH6cudg&s" type="image/x-icon">
</head>
<body>
    <div class="body-wrapper">
        <div class="home-page">
            <div class="container">
                <div class="toggle-button">
                    <input type="checkbox" id="mode-toggle" class="toggle-checkbox">
                    <label for="mode-toggle" class="toggle-label"></label>
                </div>
            </div>
            <div class="wrapper">
                <div class="left">
                    <div class="box physical-box">Physical</div>
                <div class="box padai-box">Study</div>
                <div class="box mental-box">Mental</div>
                </div>
                <div class="charts">
                    <canvas id="physicalMyChart"></canvas>

                    <br>
                    <canvas id="padaiMyChart"></canvas>

                    <br>
                    <canvas id="mentalMyChart"></canvas>

                </div>
                <div class="donuts">
                    <canvas id="physicalMyChartDonut"></canvas>
                    <br>
                    <canvas id="padaiMyChartDonut"></canvas>
                    <br>
                    <canvas id="mentalMyChartDonut"></canvas>
                </div>
                
                
            </div>
        </div>
        <div class="physical top-page">
            <div class="back-button-div">
                <button class="back-button">Back</button>
            </div>
            
            <a href="/physical"><button class="add-task">Add task</button></a>
            <% try { %>
                <% if (Array.isArray(physicalTask) && physicalTask.length > 0) { %>
                    <% for (let task of physicalTask) { %>
                        <% if (task.left >0) { %>
                        <div class="task-wrapper">
                            <div class="task">
                                <div class="cont-1">
                                    <h3><%= task.task %></h3>
                                    <h2>time left: <%= task.left.toFixed(2) %></h2>
                              
                                </div>
                                <div class="cont-2">
                                    
                                    
                                        <a href="/timer/physical/<%= task._id %>"><button type="submit" class="do-task">Do Task</button></a> 
                                       
                                
                                    <form action="/physical/<%= task._id %>?_method=DELETE" method="post">
                                        <button type="submit" class="delete">delete</button>
                                    </form>
                                </div>
                            </div>
                            
                            <div class="task-donut">
                                <canvas id="<%=task._id%>Donut"></canvas>
                            </div>
                            
                        </div>
                        <% } %>
                    <% } %>
                <% } %>
            <% } catch (error) { %>
                <h1>Error: <%= error.message %></h1>
            <% } %>
        </div>
        <div class="padai">
            <div class="back-button-div">
                <button class="back-button">Back</button>
            </div>
            <a href="/padai"><button class="add-task">Add task</button></a>
            <% try { %>
                <% if (Array.isArray(padaiTask) && padaiTask.length > 0) { %>
                    <% for (let task of padaiTask) { %>
                        <% if (task.left >0) { %>
                        <div class="task-wrapper">
                            <div class="task">
                                <div class="cont-1">
                                    <h3><%= task.task %></h3>
                                    <h2>time left: <%= task.left.toFixed(2) %></h2>
                              
                                </div>
                                <div class="cont-2">
    
                                    
                                        <a href="/timer/padai/<%= task._id %>"><button type="submit" class="do-task">Do Task</button></a> 
                                       
    
                                    <form action="/padai/<%= task._id %>?_method=DELETE" method="post">
                                        <button type="submit" class="delete">delete</button>
                                    </form>
                                </div>
                            </div>
                            <div class="task-donut">
                                <canvas id="<%=task._id%>Donut"></canvas>
                            </div>
                            
                        </div>
                        <% } %>
                    <% } %>
                <% } %>
            <% } catch (error) { %>
                <h1>Error: <%= error.message %></h1>
            <% } %>
        </div>
        <div class="mental">
            <div class="back-button-div">
                <button class="back-button">Back</button>
            </div>
            <a href="/mental"><button class="add-task">Add task</button></a>
            <% try { %>
                <% if (Array.isArray(mentalTask) && mentalTask.length > 0) { %>
                    <% for (let task of mentalTask) { %>
                        <% if (task.left >0) { %>
                        <div class="task-wrapper">
                            <div class="task">
                                <div class="cont-1">
                                    <h3><%= task.task %></h3>
                                    <h2>time left: <%= task.left.toFixed(2) %></h2>
                              
                                </div>
                                <div class="cont-2">
                                    <a href="/timer/mental/<%= task._id %>"><button type="submit" class="do-task">Do Task</button></a> 
                                    <form action="/mental/<%= task._id %>?_method=DELETE" method="post">
                                        <button type="submit" class="delete">delete</button>
                                    </form>
                                </div>
                            </div>
                            

                            <div class="task-donut">
                                <canvas id="<%=task._id%>Donut"></canvas>
                            </div>
                            
                        </div>
                        <% } %>
                    <% } %>
                <% } %>
            <% } catch (error) { %>
                <h1>Error: <%= error.message %></h1>
            <% } %>
        </div>
        
          
         
    </div>
    
    
    <script src="script.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
          
    <script>
        const datesOnlyPadai = <%- JSON.stringify(datesOnlyPadai) %>;
        const padaiTimeWorked = <%- JSON.stringify(padaiTimeWorked) %>;
        const datesOnlyMental = <%- JSON.stringify(datesOnlyMental) %>;
        const mentalTimeWorked = <%- JSON.stringify(mentalTimeWorked) %>;
        const datesOnlyPhysical = <%- JSON.stringify(datesOnlyPhysical) %>;
        const physicalTimeWorked = <%- JSON.stringify(physicalTimeWorked) %>;
        const currentDayMental=<%- JSON.stringify(currentDayMental) %>;
        const currentDayPadai=<%- JSON.stringify(currentDayPadai) %>;
        const currentDayPhysical=<%- JSON.stringify(currentDayPhysical) %>;
        const physicalTask=<%- JSON.stringify(physicalTask) %>;
        const padaiTask=<%- JSON.stringify(padaiTask) %>;
        const mentalTask=<%- JSON.stringify(mentalTask) %>;

        const physicalCtx = document.getElementById('physicalMyChart');
        const padaiCtx = document.getElementById('padaiMyChart');
        const mentalCtx = document.getElementById('mentalMyChart');
        const physicalDonutCtx = document.getElementById('physicalMyChartDonut');
        const padaiDonutCtx = document.getElementById('padaiMyChartDonut');
        const mentalDonutCtx = document.getElementById('mentalMyChartDonut');
        let completedPhysical=0;
        let completedPadai=0;
        let completedMental=0;
        console.log(currentDayPadai);
        console.log("------------------");
        console.log(currentDayMental);
        for(let i=0;i<currentDayMental.length;i++){
            if(currentDayMental[i][0]){
                if(currentDayMental[i][0].left==0) completedMental+=1
            };
        }
        for(let i=0;i<currentDayPadai.length;i++){
            if(currentDayPadai[i][0]){
                if(currentDayPadai[i][0].left==0) completedPadai+=1;
            }
        }
        for(let i=0;i<currentDayPhysical.length;i++){
            if(currentDayPhysical[i][0].left==0) completedPhysical+=1;
        }
        let incompletedPhysical=currentDayPhysical.length-completedPhysical;
        let incompletedPadai=currentDayPadai.length-completedPadai;
        let incompletedMental=currentDayMental.length-completedMental;
      new Chart(physicalCtx, {
        type: 'bar',
        data: {

          labels: datesOnlyPhysical,
          datasets: [{
            label: 'Graph',
            data: physicalTimeWorked,
            borderWidth: 1,
          }]
        },
        options: {
            plugins: {
        // changin the lagend colour
        legend: {
            labels: {
                color: "grey",
            },
            
        },
        title: {
        display: true,
        text: 'Physical',
      },
    },
          scales: {
            y: {
              ticks: { color: "grey", beginAtZero: true },
              title: {
                            display: true,
                            text: 'Minutes' // Name of x-axis
                        },
                        beginAtZero: true

            },
            x: {
              ticks: { color: "grey", beginAtZero: true },
              title: {
                            display: true,
                            text: 'Dates' // Name of x-axis
                        },
                        beginAtZero: true

            }
          }
          
        }
      });
      new Chart(padaiCtx, {
        type: 'bar',
        data: {
          labels: datesOnlyPadai,
          datasets: [{
            label: 'Graph',
            data: padaiTimeWorked,
            borderWidth: 1
          }]
        },
        options: {
            plugins: {
        // changin the lagend colour
        legend: {
            labels: {
                color: "grey",
            },
        },
        title: {
        display: true,
        text: 'Study',
      },
    },
          scales: {
           y: {
              ticks: { color: "grey", beginAtZero: true },
              title: {
                            display: true,
                            text: 'Minutes' // Name of x-axis
                        },
                        beginAtZero: true

            },
            x: {
              ticks: { color: "grey", beginAtZero: true },
              title: {
                            display: true,
                            text: 'Dates' // Name of x-axis
                        },
                        beginAtZero: true

            }
          }
          
        }
      });
      new Chart(mentalCtx, {
        type: 'bar',
        data: {
          labels: datesOnlyMental,
          datasets: [{
            label: 'Graph',
            data: mentalTimeWorked,
            borderWidth: 1,
          }]
        },
        options: {
            plugins: {
        // changin the lagend colour
        legend: {
            labels: {
                color: "grey",
            },
        },
        title: {
        display: true,
        text: 'Mental',
      },
    },
          scales: {
            y: {
              ticks: { color: "grey", beginAtZero: true },
              title: {
                            display: true,
                            text: 'Minutes' // Name of x-axis
                        },
                        beginAtZero: true

            },
            x: {
              ticks: { color: "grey", beginAtZero: true },
              title: {
                            display: true,
                            text: 'Dates' // Name of x-axis
                        },
                        beginAtZero: true

            }
          }
          
        }
      });
      //donuts
      new Chart(physicalDonutCtx,{
        type: 'doughnut',
        data: {
            labels: [
                'Completed',
                'Incompleted',
            ],
            datasets: [{
                label: 'My First Dataset',
                data: [completedPhysical,incompletedPhysical],
                backgroundColor: [
                'hsl(100, 100%, 60%)', '#777',
                ],
                hoverOffset: 4
            }]
        },
      })
      new Chart(padaiDonutCtx,{
        type: 'doughnut',
        data: {
            labels: [
                'Completed',
                'Incompleted',
            ],
            datasets: [{
                label: 'My First Dataset',
                data: [completedPadai,incompletedPadai],
                backgroundColor: [
                'hsl(100, 100%, 60%)', '#777',
                ],
                hoverOffset: 4
            }]
        },
      })
      new Chart(mentalDonutCtx,{
        type: 'doughnut',
        data: {
            labels: [
                'Completed',
                'Incompleted',
            ],
            datasets: [{
                label: 'My First Dataset',
                data: [completedMental,incompletedMental],
                backgroundColor: [
                'hsl(100, 100%, 60%)', '#777',
                ],
                hoverOffset: 4
            }]
        },
      })

      //task donut
      for(let task of physicalTask){
        if(task.left==0) continue;
        let taskCtx=`${task._id}Donut`
        new Chart(taskCtx,{
        type: 'doughnut',
        data: {
            labels: [
                'Completed',
                'Incompleted',
            ],
            datasets: [{
                label: 'My First Dataset',
                data: [task.target-task.left,task.left],
                backgroundColor: [
                'hsl(100, 100%, 60%)', '#777',
                ],
                hoverOffset: 4
            }]
        },
      })
      }

      for(let task of padaiTask){
        if(task.left==0) continue;
        console.log(task);
        let taskCtx=`${task._id}Donut`
        new Chart(taskCtx,{
        type: 'doughnut',
        data: {
            labels: [
                'Completed',
                'Incompleted',
            ],
            datasets: [{
                label: 'My First Dataset',
                data: [task.target-task.left,task.left],
                backgroundColor: [
                'hsl(100, 100%, 60%)', '#777',
                ],
                hoverOffset: 4
            }]
        },
      })
      }

      for(let task of mentalTask){
        if(task.left==0) continue;
        // console.log(task);
        let taskCtx=`${task._id}Donut`
        new Chart(taskCtx,{
        type: 'doughnut',
        data: {
            labels: [
                'Completed',
                'Incompleted',
            ],
            datasets: [{
                label: 'My First Dataset',
                data: [task.target-task.left,task.left],
                backgroundColor: [
                'hsl(100, 100%, 60%)', '#777',
                ],
                hoverOffset: 4
            }]
        },
      })
      }
    </script>
</body>
</html>
